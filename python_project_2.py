# -*- coding: utf-8 -*-
"""Python Project 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qbXoHTniF6bRCUxw4rpg49r5_3ec73W9
"""

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

# Generate sample data
np.random.seed(0)
x = np.linspace(0, 10, 100)
y1 = np.sin(x)
y2 = np.cos(x)
data = pd.DataFrame({'X': x, 'Sin': y1, 'Cos': y2})

# Basic Plotting Techniques
plt.figure(figsize=(12, 6))

# Line plot
plt.subplot(2, 3, 1)
plt.plot(x, y1)
plt.title('Line Plot')

# Scatter plot
plt.subplot(2, 3, 2)
plt.scatter(x, y1, color='red', label='Sin')
plt.scatter(x, y2, color='blue', label='Cos')
plt.legend()
plt.title('Scatter Plot')

# Bar plot
plt.subplot(2, 3, 3)
categories = ['A', 'B', 'C', 'D']
values = [7, 3, 9, 5]
plt.bar(categories, values)
plt.title('Bar Plot')

# Histogram
plt.subplot(2, 3, 4)
plt.hist(y1, bins=20, color='green')
plt.title('Histogram')

# Pie chart
plt.subplot(2, 3, 5)
sizes = [15, 30, 45, 10]
labels = ['A', 'B', 'C', 'D']
plt.pie(sizes, labels=labels, autopct='%1.1f%%')
plt.title('Pie Chart')

plt.tight_layout()

# Customization
plt.figure(figsize=(8, 4))
plt.plot(x, y1, color='orange', linestyle='--', marker='o')
plt.title('Customized Line Plot')
plt.xlabel('X')
plt.ylabel('Sin(X)')
plt.grid(True)

# Subplots
fig, axes = plt.subplots(1, 2, figsize=(12, 4))

# Box plot
sns.boxplot(data=data[['Sin', 'Cos']], ax=axes[0])
axes[0].set_title('Box Plot')

# Violin plot
sns.violinplot(data=data[['Sin', 'Cos']], ax=axes[1])
axes[1].set_title('Violin Plot')

plt.tight_layout()

# Advanced Plot Types
plt.figure(figsize=(10, 6))

# Heatmap
plt.subplot(2, 2, 1)
sns.heatmap(data.corr(), annot=True, cmap='coolwarm')
plt.title('Heatmap')

# Pairplot
plt.subplot(2, 2, 2)
sns.pairplot(data[['Sin', 'Cos']])
plt.title('Pairplot')

# Statistical Visualization
plt.subplot(2, 2, 3)
sns.histplot(data['Sin'], kde=True, color='purple')
plt.title('Distribution Plot')

# Regression plot
plt.subplot(2, 2, 4)
sns.regplot(x='Sin', y='Cos', data=data)
plt.title('Regression Plot')

plt.tight_layout()

plt.show()